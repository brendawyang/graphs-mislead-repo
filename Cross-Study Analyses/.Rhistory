models_df <- full_join(full_join(subject_graphliteracy_df, demographic_df[, c("participantID", "dem_ed", "dem_gender", "dem_age")]), rating_df)
##Create lm difference df
##(df with subject truncation effect scores (difference between truncated and control) + all demographics and graph literacy scores)
models_difference_df <- left_join(left_join(subject_difference_df,subject_graphliteracy_df), demographic_df[, c("participantID", "dem_ed", "dem_gender", "dem_age")])
#Create trimmed timing df
##(trims anything past 2 standard deviations from each participant's individual mean for each condition)
trimmed_timing_df <- timing_df %>%
group_by(participantID, subject_condition, graph_condition) %>%
mutate(avg = mean(time), stdev = sd(time)) %>%
filter(time <= 2*stdev+avg) %>%
as.data.frame()
graphliteracymodel <- lm(difference ~ graphliteracy_sum_rating, models_difference_df)
summary_graphliteracymodel <- summary(graphliteracymodel)
summary_graphliteracymodel
ggplot(models_difference_df, aes(x = graphliteracy_sum_rating, y = difference))+
geom_smooth(method = lm, color = "#510D73", fill = "#510D73") +
geom_jitter(alpha = 0.7)+
ylab("truncation effect")+
xlab("graph literacy score")+
ggtitle("Figure SI3 Graph Literacy")+
raincloud_theme+
theme(axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'))
# ggsave('../figures/figureSI3_graphliteracy.png', plot = last_plot(), width = 6, height = 4)
# predicting rating with subject and graph condition + participant AND item as random effects (random intercepts only)
model1.0 <- lmer(rating ~ subject_condition * graph_condition + (1 | participantID) + (1 | question), models_df)
summary_model1.0 <- summary(model1.0)
# graph literacy and subject condition
model_literacy_warning<- lm(difference ~ graphliteracy_sum_rating * subject_condition, models_difference_df)
##Model
summary_model_literacy_warning <- summary(model_literacy_warning)
summary_model_literacy_warning
ggplot(models_difference_df, aes(x = graphliteracy_sum_rating, y = difference, color = subject_condition, fill = subject_condition))+
geom_smooth(method = lm) +
geom_jitter(alpha = 0.7)+
ylab("truncation effect")+
xlab("graph literacy score")+
ggtitle("Figure SI3 Graph Literacy by Warning Condition")+
raincloud_theme+
theme(axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'))+
scale_colour_brewer(type = "div", palette = "Dark2")+
scale_fill_brewer(type = "div", palette = "Dark2")
# ggsave('../figures/figureSI3_graphliteracy_subjectcondition.png', plot = last_plot(), width = 8, height = 4)
View(models_difference_df)
?write_csv
write_csv(models_difference_df, path = "s3_models_difference_df.csv")
setwd("C:/Users/brend/Dropbox/_Marsh lab/project-graphs-misleading/paper 1/graphs-mislead-repo/Study 2 (FKA Study 4)")
#Make sure all packages are installed
list.of.packages <- c("readr", "tidyr", "dplyr", "magrittr", "psych", "stringr", "effsize", "shiny", "readr", "lme4", "lmerTest", "kableExtra", "knitr", "ggplot2", "ggthemes", "cowplot", "pwr", "psych")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
#turn off scientific notation
options(scipen=999)
#Load all libraries
library(readr)
library(tidyr)
library(dplyr)
library(magrittr)
library(effsize)
library(lme4) # for mixed effects models
library(lmerTest)
library(kableExtra)
library(knitr)#kable
library(pwr)
##Raincloud Plot Libraries
source("../R_rainclouds.R")
library(cowplot)
library(ggthemes)
library(ggplot2)
#raincloud plot theme
raincloud_theme <- theme(
text = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16, margin = margin(r = 20)),
axis.text = element_text(size = 14),
legend.title=element_blank(),
legend.text=element_text(size=16),
legend.position = "right",
plot.title = element_text(lineheight=.8, face="bold", size = 16),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.grid.major.y = element_line(colour = 'light gray', size=0.5, linetype='solid'),
axis.line = element_blank(),
axis.ticks.y = element_blank())
rating_df <- read_csv("data/clean/s4_rating_df.csv")
demographic_df <- read_csv("data/clean/s4_demographic_df.csv")
graphliteracy_df <- read_csv("data/clean/s4_graphliteracy_df.csv")
debriefing_df <- read_csv("data/clean/s4_debriefing_df.csv")
timing_df <- read_csv("data/clean/s4_timing_df.csv")
Exclude_Exercise_Check <- TRUE
participants_excluded <- demographic_df %>%
filter(check == "wrong") %>%
group_by(check) %>%
summarise(n = n())
if(Exclude_Exercise_Check == TRUE){rating_df <- rating_df %>%
filter(check == "right" | subject_condition == "no warning")
} else{rating_df <- rating_df}
if(Exclude_Exercise_Check == TRUE){demographic_df <- demographic_df %>%
filter(check == "right" | subject_condition == "no warning")
} else{demographic_df <- demographic_df}
Exclude_Exercise_Check <- FALSE
participants_excluded <- demographic_df %>%
filter(check == "wrong") %>%
group_by(check) %>%
summarise(n = n())
if(Exclude_Exercise_Check == TRUE){rating_df <- rating_df %>%
filter(check == "right" | subject_condition == "no warning")
} else{rating_df <- rating_df}
if(Exclude_Exercise_Check == TRUE){demographic_df <- demographic_df %>%
filter(check == "right" | subject_condition == "no warning")
} else{demographic_df <- demographic_df}
Exclude_Exercise_Check <- FALSE
participants_excluded <- demographic_df %>%
filter(check == "wrong") %>%
group_by(check) %>%
summarise(n = n())
if(Exclude_Exercise_Check == TRUE){rating_df <- rating_df %>%
filter(check == "right" | subject_condition == "no warning")
} else{rating_df <- rating_df}
if(Exclude_Exercise_Check == TRUE){demographic_df <- demographic_df %>%
filter(check == "right" | subject_condition == "no warning")
} else{demographic_df <- demographic_df}
#Create data frames that will be used throughout
#Calculate subject means by condition for session 1
##(mean rating for truncated and mean rating for non-truncated graphs)
#NOTE: na.rm = TRUE otherwise any participant who doesn't answer 1 of the questions will have an NA for as a mean.
subject_mean_df <- rating_df %>%
group_by(participantid, session, subject_condition, graph_condition) %>%
summarise(subject_mean_rating = mean(rating, na.rm = TRUE)) %>%
arrange(participantid)
#Calculate subject difference rating for session 1
##(non-truncated mean rating - truncated mean rating)
subject_difference_df <- subject_mean_df %>%
spread(graph_condition, subject_mean_rating) %>%
mutate(difference =  truncated - control)
#Calculate session difference for difference rating
##(difference for session 2 - difference for session 1)
subject_difference_session_df <- subject_difference_df %>%
select(-c(control, truncated)) %>%
spread(session, difference) %>%
mutate(difference =  `2` - `1`)
#Calculate subject overall graph literacy score
##(sum of graph literacy items)
subject_graphliteracy_df <- graphliteracy_df %>%
group_by(subject_condition, participantid) %>%
summarise(graphliteracy_sum_rating = sum(rating))
#Create mixed effects df
##(combination of ratings, overall graph literacy scores and some demographic questions --- education, gender and age)
models_df <- full_join(full_join(subject_graphliteracy_df, demographic_df[, c("participantid", "dem_ed", "dem_gender", "dem_age")]), rating_df)
##Create lm difference df
##(df with subject truncation effect scores (difference between truncated and control) + all demographics and graph literacy scores)
models_difference_df <- left_join(left_join(subject_difference_df,subject_graphliteracy_df), demographic_df[, c("participantid", "dem_ed", "dem_gender", "dem_age")])
#Create trimmed timing df
##(trims anything past 2 standard deviations from each participant's individual mean for each condition)
trimmed_timing_df <- timing_df %>%
group_by(participantid, subject_condition, graph_condition) %>%
mutate(avg = mean(time), stdev = sd(time)) %>%
filter(time <= 2*stdev+avg) %>%
as.data.frame()
View(models_difference_df)
# export `models_difference_df` for cross-experimental analysis
write_csv(models_difference_df, path = "s4_models_difference_df.csv")
setwd("C:/Users/brend/Dropbox/_Marsh lab/project-graphs-misleading/paper 1/graphs-mislead-repo/Study 3 (FKA Study 5)")
#Make sure all packages are installed
list.of.packages <- c("readr", "tidyr", "dplyr", "magrittr", "psych", "stringr", "effsize", "shiny", "readr", "lme4", "lmerTest", "kableExtra", "knitr", "ggplot2", "ggthemes", "cowplot", "pwr", "psych")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
#turn off scientific notation
options(scipen=999)
#Load all libraries
library(readr)
library(tidyr)
library(dplyr)
library(magrittr)
library(effsize)
library(lme4) # for mixed effects models
library(lmerTest)
library(kableExtra)
library(knitr)#kable
library(pwr)
##Raincloud Plot Libraries
source("../R_rainclouds.R")
library(cowplot)
library(ggthemes)
library(ggplot2)
#raincloud plot theme
raincloud_theme <- theme(
text = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16, margin = margin(r = 20)),
axis.text = element_text(size = 14),
legend.title=element_blank(),
legend.text=element_text(size=16),
legend.position = "right",
plot.title = element_text(lineheight=.8, face="bold", size = 16),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.grid.major.y = element_line(colour = 'light gray', size=0.5, linetype='solid'),
axis.line = element_blank(),
axis.ticks.y = element_blank())
rating_df <- read_csv("data/clean/s5_rating_df.csv")
demographic_df <- read_csv("data/clean/s5_demographic_df.csv")
graphliteracy_df <- read_csv("data/clean/s5_graphliteracy_df.csv")
debriefing_df <- read_csv("data/clean/s5_debriefing_df.csv")
timing_df <- read_csv("data/clean/s5_timing_df.csv")
Exclude_Exercise_Check <- FALSE
participants_excluded <- demographic_df %>%
filter(check == "wrong") %>%
group_by(check) %>%
summarise(n = n())
if(Exclude_Exercise_Check == TRUE){rating_df <- rating_df %>%
filter(check == "right" | subject_condition == "no warning")
} else{rating_df <- rating_df}
if(Exclude_Exercise_Check == TRUE){demographic_df <- demographic_df %>%
filter(check == "right"| subject_condition == "no warning")
} else{demographic_df <- demographic_df}
# import
notice_df <- read_csv("data/clean/s5_notice_df.csv")
# merge
rating_df <- left_join(rating_df, notice_df)
demographic_df <- left_join(demographic_df, notice_df)
#graphliteracy_df <- left_join(graphliteracy_df, notice_df)
Exclude_Notice <- FALSE
# How many people are we potentially excluding?
notice_df %>%
filter(noticed == 1) %>%
group_by(noticed) %>%
summarise(n = n())
# How do the numbers break down by field?
notice_df %>%
filter(noticed == 1) %>%
group_by(field) %>%
summarise(n = n())
# Do the exclusions from datasets
if(Exclude_Notice == TRUE){rating_df <- rating_df %>%
filter(noticed != 1)
} else{rating_df <- rating_df}
if(Exclude_Notice == TRUE){demographic_df <- demographic_df %>%
filter(noticed != 1)
} else{demographic_df <- demographic_df}
if(Exclude_Notice == TRUE){graphliteracy_df <- graphliteracy_df %>%
filter(noticed != 1)
} else{graphliteracy_df <- graphliteracy_df}
nrow(rating_df)
#Calculate subject means by condition
##(mean rating for truncated and mean rating for non-truncated graphs)
subject_mean_df <- rating_df %>%
group_by(participantID, field, subject_condition, graph_condition) %>%
summarise(subject_mean_rating = mean(rating, na.rm = TRUE)) %>%
arrange(participantID)
#Calculate subject difference rating
##(non-truncated mean rating - truncated mean rating)
subject_difference_df <- subject_mean_df %>%
spread(graph_condition, subject_mean_rating) %>%
mutate(difference =  truncated - control)
#Calculate subject overall graph literacy score
##(sum of graph literacy items)
subject_graphliteracy_df <- graphliteracy_df %>%
group_by(participantID, field, subject_condition) %>%
summarise(graphliteracy_sum_rating = sum(rating))
#Create mixed effects df
##(combination of ratings, overall graph literacy scores and some demographic questions --- education, gender and age)
models_df <- full_join(full_join(subject_graphliteracy_df, demographic_df[, c("participantID", "dem_ed", "dem_gender", "dem_age")]), rating_df)
##Create mixed effects difference df
##(df with subject truncation effect scores (difference between truncated and control) + all demographics and graph literacy scores)
models_difference_df <- left_join(left_join(subject_difference_df,subject_graphliteracy_df), demographic_df[, c("participantID", "dem_ed", "dem_gender", "dem_age")])
#Create trimmed timing df
##(trims anything past 2 standard deviations from each participant's individual mean for each condition)
trimmed_timing_df <- timing_df %>%
group_by(participantID, subject_condition, graph_condition) %>%
mutate(avg = mean(time), stdev = sd(time)) %>%
filter(time <= 2*stdev+avg) %>%
as.data.frame()
View(models_difference_df)
write_csv(models_difference_df, path = "s5_models_difference_df.csv")
#Make sure all packages are installed
list.of.packages <- c("readr", "tidyr", "dplyr", "magrittr", "psych", "stringr", "effsize", "shiny", "readr", "lme4", "lmerTest", "kableExtra", "knitr", "ggplot2", "ggthemes", "cowplot", "pwr", "psych")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
#turn off scientific notation
options(scipen=999)
#Load all libraries
library(readr)
library(tidyr)
library(dplyr)
library(magrittr)
library(effsize)
library(lme4) # for mixed effects models
library(lmerTest)
library(kableExtra)
library(knitr)#kable
library(pwr)
##Raincloud Plot Libraries
source("../R_rainclouds.R")
library(cowplot)
library(ggthemes)
library(ggplot2)
#raincloud plot theme
raincloud_theme <- theme(
text = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16, margin = margin(r = 20)),
axis.text = element_text(size = 14),
legend.title=element_blank(),
legend.text=element_text(size=16),
legend.position = "right",
plot.title = element_text(lineheight=.8, face="bold", size = 16),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.grid.major.y = element_line(colour = 'light gray', size=0.5, linetype='solid'),
axis.line = element_blank(),
axis.ticks.y = element_blank())
setwd("C:/Users/brend/Dropbox/_Marsh lab/project-graphs-misleading/paper 1/graphs-mislead-repo/Cross-Study Analyses")
s3_models_difference_df <- read_csv("s3_models_difference_df.csv")
s4_models_difference_df <- read_csv("s4_models_difference_df.csv")
s3_models_difference_df <- read_csv("data/s3_models_difference_df.csv")
s4_models_difference_df <- read_csv("data/s4_models_difference_df.csv")
s5_models_difference_df <- read_csv("data/s5_models_difference_df.csv")
View(s3_models_difference_df)
View(s4_models_difference_df)
View(s5_models_difference_df)
# merge
models_difference_df <- left_join(s3_models_difference_df, s4_models_difference_df)
models_difference_df <- left_join(models_difference_df, s5_models_difference_df)
nrow(models_difference_df)
View(models_difference_df)
# merge
models_difference_df <- full_join(s3_models_difference_df, s4_models_difference_df)
models_difference_df <- full_join(models_difference_df, s5_models_difference_df)
nrow(models_difference_df)
119+278+330
nrow(models_difference_df) # 727
View(s3_models_difference_df)
View(s4_models_difference_df)
View(s5_models_difference_df)
s3_models_difference_df <- read_csv("data/s3_models_difference_df.csv")
s4_models_difference_df <- read_csv("data/s4_models_difference_df.csv")
s5_models_difference_df <- read_csv("data/s5_models_difference_df.csv")
# merge
models_difference_df <- full_join(s3_models_difference_df, s4_models_difference_df)
models_difference_df <- full_join(models_difference_df, s5_models_difference_df)
nrow(models_difference_df) # 727
graphliteracymodel <- lmer(difference ~ graphliteracy_sum_rating + (1 | participantID), models_difference_df)
summary_graphliteracymodel <- summary(graphliteracymodel)
summary_graphliteracymodel
ggplot(models_difference_df, aes(x = graphliteracy_sum_rating, y = difference))+
geom_smooth(method = lm, color = "#510D73", fill = "#510D73") +
geom_jitter(alpha = 0.7)+
ylab("truncation effect")+
xlab("graph literacy score")+
ggtitle("Figure SI4 Graph Literacy")+
raincloud_theme+
theme(axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'))
model_literacy_warning<- lm(difference ~ graphliteracy_sum_rating * subject_condition, models_difference_df)
##Model
summary_model_literacy_warning <- summary(model_literacy_warning)
summary_model_literacy_warning
graphliteracymodel <- lmer(difference ~ graphliteracy_sum_rating + (1 | participantID), models_difference_df)
summary_graphliteracymodel <- summary(graphliteracymodel)
summary_graphliteracymodel
ggplot(models_difference_df, aes(x = graphliteracy_sum_rating, y = difference))+
geom_smooth(method = lm, color = "#510D73", fill = "#510D73") +
geom_jitter(alpha = 0.7)+
ylab("truncation effect")+
xlab("graph literacy score")+
ggtitle("Studies 3 - 5 Graph Literacy")+
raincloud_theme+
theme(axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'))
# ggsave('crossStudy_graphliteracy.png', plot = last_plot(), width = 6, height = 4)
ggplot(models_difference_df, aes(x = graphliteracy_sum_rating, y = difference))+
geom_smooth(method = lm, color = "#510D73", fill = "#510D73") +
geom_jitter(alpha = 0.7)+
ylab("truncation effect")+
xlab("graph literacy score")+
ggtitle("Studies 3 - 5 Graph Literacy")+
raincloud_theme+
theme(axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid')) +
theme_minimal()
#raincloud plot theme
raincloud_theme <- theme(
text = element_text(size = 10),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16, margin = margin(r = 20)),
axis.text = element_text(size = 14),
legend.title=element_blank(),
legend.text=element_text(size=16),
legend.position = "right",
plot.title = element_text(lineheight=.8, face="bold", size = 16),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.grid.major.y = element_line(colour = 'light gray', size=0.5, linetype='solid'),
axis.line = element_blank(),
axis.ticks.y = element_blank())
ggplot(models_difference_df, aes(x = graphliteracy_sum_rating, y = difference))+
geom_smooth(method = lm, color = "#510D73", fill = "#510D73") +
geom_jitter(alpha = 0.7)+
ylab("truncation effect")+
xlab("graph literacy score")+
ggtitle("Studies 3 - 5 Graph Literacy")+
raincloud_theme
ggplot(models_difference_df, aes(x = graphliteracy_sum_rating, y = difference))+
geom_smooth(method = lm, color = "#510D73", fill = "#510D73") +
geom_jitter(alpha = 0.7)+
ylab("truncation effect")+
xlab("graph literacy score")+
ggtitle("Studies 3 - 5 Graph Literacy")+
theme_minimal() +
raincloud_theme
ggplot(models_difference_df, aes(x = graphliteracy_sum_rating, y = difference))+
geom_smooth(method = lm, color = "#510D73", fill = "#510D73") +
geom_jitter(alpha = 0.7)+
ylab("truncation effect")+
xlab("graph literacy score")+
ggtitle("Studies 3 - 5 Graph Literacy")+
theme_minimal() +
raincloud_theme +
theme(axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'))
ggplot(models_difference_df, aes(x = graphliteracy_sum_rating, y = difference))+
geom_smooth(method = lm, color = "#510D73", fill = "#510D73") +
geom_jitter(alpha = 0.7)+
ylab("truncation effect")+
xlab("graph literacy score")+
ggtitle("Studies 3 - 5 Graph Literacy")+
theme_minimal() +
raincloud_theme
ggplot(models_difference_df, aes(x = graphliteracy_sum_rating, y = difference))+
geom_smooth(method = lm, color = "#510D73", fill = "#510D73") +
geom_jitter(alpha = 0.7)+
ylab("truncation effect")+
xlab("graph literacy score")+
ggtitle("Studies 3 - 5 Graph Literacy")+
#theme_minimal() +
raincloud_theme +
theme(axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'))
ggplot(models_difference_df, aes(x = graphliteracy_sum_rating, y = difference))+
geom_smooth(method = lm, color = "#510D73", fill = "#510D73") +
geom_jitter(alpha = 0.7)+
ylab("truncation effect")+
xlab("graph literacy score")+
ggtitle("Studies 3 - 5 Graph Literacy")+
#theme_minimal() +
raincloud_theme
ggplot(models_difference_df, aes(x = graphliteracy_sum_rating, y = difference))+
geom_smooth(method = lm, color = "#510D73", fill = "#510D73") +
geom_jitter(alpha = 0.7)+
ylab("truncation effect")+
xlab("graph literacy score")+
ggtitle("Studies 3 - 5 Graph Literacy")+
#theme_minimal() +
raincloud_theme +
theme(axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'))
ggsave('crossStudy_graphliteracy.png', plot = last_plot(), width = 6, height = 4)
ggplot(models_difference_df, aes(x = graphliteracy_sum_rating, y = difference))+
geom_smooth(method = lm, color = "#510D73", fill = "#510D73") +
geom_jitter(alpha = 0.7)+
ylab("truncation effect")+
xlab("graph literacy score")+
ggtitle("Studies 3 - 5 Graph Literacy")+
theme_minimal() +
raincloud_theme +
theme(axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'))
# ggsave('crossStudy_graphliteracy.png', plot = last_plot(), width = 6, height = 4)
ggplot(models_difference_df, aes(x = graphliteracy_sum_rating, y = difference))+
geom_smooth(method = lm, color = "#510D73", fill = "#510D73") +
geom_jitter(alpha = 0.7, color = NA)+
ylab("truncation effect")+
xlab("graph literacy score")+
ggtitle("Studies 3 - 5 Graph Literacy")+
# theme_minimal() +
raincloud_theme +
theme(axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'))
ggplot(models_difference_df, aes(x = graphliteracy_sum_rating, y = difference))+
geom_smooth(method = lm, color = "#510D73", fill = "#510D73") +
geom_jitter(alpha = 0.7, fill = NA)+
ylab("truncation effect")+
xlab("graph literacy score")+
ggtitle("Studies 3 - 5 Graph Literacy")+
# theme_minimal() +
raincloud_theme +
theme(axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'))
ggplot(models_difference_df, aes(x = graphliteracy_sum_rating, y = difference))+
geom_smooth(method = lm, color = "#510D73", fill = "#510D73") +
geom_jitter(alpha = 0.5, fill = NA)+
ylab("truncation effect")+
xlab("graph literacy score")+
ggtitle("Studies 3 - 5 Graph Literacy")+
# theme_minimal() +
raincloud_theme +
theme(axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'))
# ggsave('crossStudy_graphliteracy.png', plot = last_plot(), width = 6, height = 4)
ggsave('crossStudy_graphliteracy.png', plot = last_plot(), width = 6, height = 4)
ggsave('crossStudy_graphliteracy.png', plot = last_plot(), width = 6, height = 4)
graphliteracy_sum_rating
ggplot(models_difference_df, aes(x = graphliteracy_sum_rating, y = difference))+
geom_smooth(method = lm, color = "#510D73", fill = "#510D73") +
geom_jitter(alpha = 0.5, fill = NA)+
ylab("truncation effect")+
xlab("graph literacy score")+
ggtitle("Studies 3 - 5 Graph Literacy")+
# theme_minimal() +
raincloud_theme +
theme(
axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'),
panel.background = element_rect(fill = "white")
)
ggsave('crossStudy_graphliteracy.png', plot = last_plot(), width = 6, height = 4)
